Traceback (most recent call last):
  File "/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
out_crop = crop_model(batch)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[11], line 1[0m
[0;32m----> 1[0m out_crop [38;5;241m=[39m [43mcrop_model[49m[43m([49m[43mbatch[49m[43m)[49m

File [0;32m/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/torch/nn/modules/module.py:1501[0m, in [0;36mModule._call_impl[0;34m(self, *args, **kwargs)[0m
[1;32m   1496[0m [38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in[39;00m
[1;32m   1497[0m [38;5;66;03m# this function, and just call forward.[39;00m
[1;32m   1498[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28mself[39m[38;5;241m.[39m_backward_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_backward_pre_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_pre_hooks
[1;32m   1499[0m         [38;5;129;01mor[39;00m _global_backward_pre_hooks [38;5;129;01mor[39;00m _global_backward_hooks
[1;32m   1500[0m         [38;5;129;01mor[39;00m _global_forward_hooks [38;5;129;01mor[39;00m _global_forward_pre_hooks):
[0;32m-> 1501[0m     [38;5;28;01mreturn[39;00m [43mforward_call[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1502[0m [38;5;66;03m# Do not call functions when jit is used[39;00m
[1;32m   1503[0m full_backward_hooks, non_full_backward_hooks [38;5;241m=[39m [], []

File [0;32m/analyse/Project0257/lukas/projects/medusa/medusa/medusa/crop/bbox_crop.py:98[0m, in [0;36mBboxCropModel.forward[0;34m(self, imgs)[0m
[1;32m     83[0m [38;5;28;01mdef[39;00m [38;5;21mforward[39m([38;5;28mself[39m, imgs):
[1;32m     84[0m [38;5;250m    [39m[38;5;124;03m"""Crops images to the desired size.[39;00m
[1;32m     85[0m 
[1;32m     86[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m     96[0m [38;5;124;03m        images) and "crop_mat" (3x3 crop matrices)[39;00m
[1;32m     97[0m [38;5;124;03m    """[39;00m
[0;32m---> 98[0m     out_lms [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_lms_model[49m[43m([49m[43mimgs[49m[43m)[49m
[1;32m     99[0m     lms [38;5;241m=[39m out_lms[[38;5;124m'[39m[38;5;124mlms[39m[38;5;124m'[39m]
[1;32m    101[0m     [38;5;28;01mif[39;00m lms [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/torch/nn/modules/module.py:1501[0m, in [0;36mModule._call_impl[0;34m(self, *args, **kwargs)[0m
[1;32m   1496[0m [38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in[39;00m
[1;32m   1497[0m [38;5;66;03m# this function, and just call forward.[39;00m
[1;32m   1498[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28mself[39m[38;5;241m.[39m_backward_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_backward_pre_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_pre_hooks
[1;32m   1499[0m         [38;5;129;01mor[39;00m _global_backward_pre_hooks [38;5;129;01mor[39;00m _global_backward_hooks
[1;32m   1500[0m         [38;5;129;01mor[39;00m _global_forward_hooks [38;5;129;01mor[39;00m _global_forward_pre_hooks):
[0;32m-> 1501[0m     [38;5;28;01mreturn[39;00m [43mforward_call[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1502[0m [38;5;66;03m# Do not call functions when jit is used[39;00m
[1;32m   1503[0m full_backward_hooks, non_full_backward_hooks [38;5;241m=[39m [], []

File [0;32m/analyse/Project0257/lukas/projects/medusa/medusa/medusa/landmark/retinaface.py:56[0m, in [0;36mRetinafaceLandmarkModel.forward[0;34m(self, imgs)[0m
[1;32m     40[0m [38;5;28;01mdef[39;00m [38;5;21mforward[39m([38;5;28mself[39m, imgs):
[1;32m     41[0m [38;5;250m    [39m[38;5;124;03m"""Runs the landmark model on a set of images.[39;00m
[1;32m     42[0m 
[1;32m     43[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m     53[0m [38;5;124;03m        'img_idx' (image index), 'bbox' (bounding box)[39;00m
[1;32m     54[0m [38;5;124;03m    """[39;00m
[0;32m---> 56[0m     out_det [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_det_model[49m[43m([49m[43mimgs[49m[43m)[49m
[1;32m     58[0m     [38;5;28;01mif[39;00m out_det[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mconf[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m) [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m     59[0m         out_lms [38;5;241m=[39m {[38;5;241m*[39m[38;5;241m*[39mout_det, [38;5;124m"[39m[38;5;124mlms[39m[38;5;124m"[39m: [38;5;28;01mNone[39;00m}

File [0;32m/analyse/Project0257/lukas/code/miniconda3/envs/medusa/lib/python3.10/site-packages/torch/nn/modules/module.py:1501[0m, in [0;36mModule._call_impl[0;34m(self, *args, **kwargs)[0m
[1;32m   1496[0m [38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in[39;00m
[1;32m   1497[0m [38;5;66;03m# this function, and just call forward.[39;00m
[1;32m   1498[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28mself[39m[38;5;241m.[39m_backward_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_backward_pre_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_pre_hooks
[1;32m   1499[0m         [38;5;129;01mor[39;00m _global_backward_pre_hooks [38;5;129;01mor[39;00m _global_backward_hooks
[1;32m   1500[0m         [38;5;129;01mor[39;00m _global_forward_hooks [38;5;129;01mor[39;00m _global_forward_pre_hooks):
[0;32m-> 1501[0m     [38;5;28;01mreturn[39;00m [43mforward_call[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1502[0m [38;5;66;03m# Do not call functions when jit is used[39;00m
[1;32m   1503[0m full_backward_hooks, non_full_backward_hooks [38;5;241m=[39m [], []

File [0;32m/analyse/Project0257/lukas/projects/medusa/medusa/medusa/detect/scrfd.py:100[0m, in [0;36mSCRFDetector.forward[0;34m(self, imgs)[0m
[1;32m     97[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(b):
[1;32m     98[0m     [38;5;66;03m# add batch dim[39;00m
[1;32m     99[0m     img [38;5;241m=[39m imgs[i, [38;5;241m.[39m[38;5;241m.[39m[38;5;241m.[39m][38;5;241m.[39munsqueeze([38;5;241m0[39m)
[0;32m--> 100[0m     det_outputs [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_det_model[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[43mimg[49m[43m,[49m[43m [49m[43moutputs_as_list[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[1;32m    101[0m     postproc_outputs [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_postproc_model(det_outputs, det_scale)
[1;32m    103[0m     [38;5;28;01mif[39;00m postproc_outputs [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    104[0m         [38;5;66;03m# No detections (that survive nms)[39;00m

File [0;32m/analyse/Project0257/lukas/projects/medusa/medusa/medusa/onnx.py:89[0m, in [0;36mOnnxModel.run[0;34m(self, inputs, outputs_as_list)[0m
[1;32m     87[0m [38;5;28;01mfor[39;00m inp [38;5;129;01min[39;00m inputs:
[1;32m     88[0m     [38;5;28;01mif[39;00m inp[38;5;241m.[39mdevice[38;5;241m.[39mtype [38;5;241m!=[39m [38;5;28mself[39m[38;5;241m.[39mdevice:
[0;32m---> 89[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mInput tensor is on [39m[38;5;132;01m{[39;00minp[38;5;241m.[39mdevice[38;5;132;01m}[39;00m[38;5;124m, but model on [39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39mdevice[38;5;132;01m}[39;00m[38;5;124m![39m[38;5;124m"[39m)
[1;32m     91[0m to_iter [38;5;241m=[39m [38;5;28mzip[39m(inputs, [38;5;28mself[39m[38;5;241m.[39m_params[[38;5;124m"[39m[38;5;124min_names[39m[38;5;124m"[39m], [38;5;28mself[39m[38;5;241m.[39m_params[[38;5;124m"[39m[38;5;124min_shapes[39m[38;5;124m"[39m])
[1;32m     92[0m [38;5;28;01mfor[39;00m inp, name, shape [38;5;129;01min[39;00m to_iter:

[0;31mValueError[0m: Input tensor is on cpu, but model on cuda!

